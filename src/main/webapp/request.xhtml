<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core">

<h:head>

</h:head>

<h:body>
    <h:form>
        <!--O "testeApplicationBean.categoriaList" logo abaixo, está sendo utilizado na view request,
        para mostrar como os atributos e objetos do TesteApplicationBean,
        podem ser chamados em qualquer outro escopo-->
        <h:outputText value="#{testeApplicationBean.categoriaList}"/><br/><br/>
        <!--No commandButton abaixo, estamos mudando a lista do testeApplicationBean-->
        <h:commandButton value="Mudar Lista" actionListener="#{testeApplicationBean.mudarLista}"/><br/>

        <h:outputText value="#{testeRequestBean.personagemSelecionado}"/><br/>
        <h:commandButton value="Selecionar personagem"
                         actionListener="#{testeRequestBean.selecionaPersonagem()}"/>

        <!--Foard - Quando utilizamos o Foard com a notação RequestScoped, ele irá fazer com que o servidor,
         no caso o Wildfly, faça apenas uma requisição, então os dados do RequestScoped permanecerão vivos,
         mesmo quando formos direcionados para outra página-->
        <h:commandButton actionListener="#{testeRequestBean.selecionaPersonagem}"
                         value="Selecionar Personagem Foard" action="index2"/>

        <!--Redirect - Quando utilizamos o Redirect com a anotação RequestScoped, serão feitas duas requisições,
         como os dados permanecem vivos apenas durante a requisição, eles morrerão assim que mudarmos de página. -->
        <h:commandButton actionListener="#{testeRequestBean.selecionaPersonagem}"
                         value="Selecionar Personagem Redirect" action="index2?faces-redirect=true"/>
    </h:form>
</h:body>

</html>
