<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:p="http://primefaces.org/ui">
<h:body>
    <!--Tag do Primefaces para utilizar o ENUM com a Expression Language-->
    <p:importEnum type="com.devdojo.maratonajsf.model.enuns.Turno"
                  var="Turno"
                  allSuffix="ALL_ENUM_VALUES"/>

    <h:outputLabel value="Hello, world"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nome}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 == estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nota1 eq estudanteRegistrarBean.estudante.nota2 and
    estudanteRegistrarBean.estudante.nome.equals('Jhonny')}"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.estudante.nota1 lt estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.estudante.nota1 le estudanteRegistrarBean.estudante.nota2}"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.estudante.nota1 = estudanteRegistrarBean.estudante.nota3}"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.estudante.nome += ' sobrenome alguma coisa'}"/><br/>
    <!--Palavras reservadas: and, or !, eq, ne, lt, gt, le, ge, true, false, null, instanceof, empty, div, mod-->

    <h:outputLabel value="---------------ENUMS---------------"/><br/>
    <h:outputText value="ENUM"/><br/>
    <h:outputText value="#{estudanteRegistrarBean.estudante.turno.equals(Turno.MATUTINO)}"/><br/>

    <h:outputLabel value="---------------ARRAYS---------------"/><br/>
    <!--Arrays-->
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesArray[0]}
                          #{estudanteRegistrarBean.estudante.nomesArray[1]}"/><br/>
    <!--ui:repeat Array-->
    <ui:repeat value="#{estudanteRegistrarBean.estudante.nomesArray}" var="nome">
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>

    <h:outputLabel value="---------------LIST---------------"/><br/>
    <!--List-->
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesList.get(0)}
                          #{estudanteRegistrarBean.estudante.nomesList.get(1)}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesList}"/>
    <!--ui:repeat List-->
    <ui:repeat value="#{estudanteRegistrarBean.estudante.nomesList}" var="nome"><br/>
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>

    <h:outputLabel value="---------------SET---------------"/><br/>
    <!--Set-->
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesSet}"/><br/>
    <!--ui:repeat Set-->
    <ui:repeat value="#{estudanteRegistrarBean.estudante.nomesSet.toArray()}" var="nome"><br/>
        <h:outputLabel value="#{nome}"/><br/>
    </ui:repeat>

    <!--MAP-->
    <h:outputLabel value="---------------MAP---------------"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesMap.get('Goku')}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.nomesMap}"/><br/>
    <!--ui:repeat Set-->
    <ui:repeat value="#{estudanteRegistrarBean.estudante.nomesMap.entrySet().toArray()}" var="entry">
        <h:outputLabel value="#{entry.key} - #{entry.value}"/><br/>
    </ui:repeat>

    <!--Métodos-->
    <h:outputLabel value="Executando Métodos"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.executar()}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.executar('xuxu beleza')}"/><br/>
    <h:outputLabel value="#{estudanteRegistrarBean.estudante.executar(estudanteRegistrarBean.estudante.nome)}"/><br/>
    <h:outputLabel
            value="#{estudanteRegistrarBean.estudante.executarRetorno(estudanteRegistrarBean.estudante.nome)}"/><br/>
    <!--No commandButton abaixo, usamos o "action" poiś ele espera um retorno.
        já se usarmos o actionListener ele entrará no método, executara o que deve executar e saira do método
        sem que sejá redirecionado para outra página-->
    <h:form>
        <h:commandButton value="Ir para proxima página"
                         action="#{estudanteRegistrarBean.estudante.irParaIndex2()}"
                         style="background-color: red"/><br/><br/>
    </h:form>

    <!--Imprimindo css com Expression Language-->
    <ui:repeat value="#{estudanteRegistrarBean.estudante.nomesList}" var="nome" varStatus="status">
        <h:outputLabel value="#{nome}" style="color: #{status.index mod 2 == 0 ? 'red' : 'green'}"/><br/>
    </ui:repeat>
</h:body>

</html>
